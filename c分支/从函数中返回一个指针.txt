#从函数中返回一个指针#

说是从函数中返回一个指针。
其实就是在函数内部申请的堆内存。
我希望在调用函数(父函数)中拿到申请的地址。

如下：
```
typdef struct
{
	char  aucStr[23];
	int length;
}XX_STRING_T;

typdef struct 
{
	XX_STRING_T	stUserName;
	XX_STRING_T stPassWord;
}XX_HTTP_T;

int fun(XX_HTTP_T ** ppstStr)
{
	if(NULL == ppstStr)
		return xx_error;
	
	*ppstStr = (XX_HTTP_T*)malloc(sizeof(XX_HTTP_T));
	if(*ppstStr == NULL)
		return xx_error;
		
	return xx_success;
}
int main(int argc, char **argv)
{
	int iRet = xx_success;
	char *pucUser = "administrator";
	//给返回地址分配栈空间存储
	XX_HTTP_T *pstStr = NULL;
	//注意这里，要体会
	XX_HTTP_T **ppstStr = &pstStr; 
	
	iRet = fun(ppstStr);
	if(iRet != xx_success)
		return iRet;
		
	//->的优先级比*的优先级高
	memcpy((*ppstStr)->stUserName.aucStr, pucUser, sizeof(pucUser));
	return xx_success;
}
```

