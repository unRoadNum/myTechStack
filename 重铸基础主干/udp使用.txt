## udp的socket使用技巧
udp是不区分server和client的，所以建立了socket了以后，就可以使用sendto和recvfrom来通信了。
使用完成以后，close就行了。
但是你仔细分析/使用一下就明白了，那第一次sendto到底发送到哪里？
所以通常的套路是接收端使用bind来绑定具体的端口号和ip地址。
	* socket函数只是获取了一个特别的文件描述符
这样简答的分析以后，接收端和发送端进行udp通信框架如下：
	* 接收端
		1. socket()
		2. bind()
		3. recvfrom()
		4. close()
	* 发送端
		1. socket()
		2. sendto()
		3. close()
如果接收端又想给发送端发送消息，应该怎么办？
不要怕，接收端在第一次recvfrom到udp包的时候，就可以知道它是从哪里来的，即对端的ip地址和端口号。
这样，接收端就可以顺利给发送端发送响应了。
聪明的你一定发现了，这个时候已经很难区分谁是接收端，谁是发送端了。
但是，你肯定记得那难忘的第一次sendto了。
完。