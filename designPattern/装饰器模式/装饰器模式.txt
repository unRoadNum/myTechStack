## 背景与应用场景
装饰器模式可以动态的添加对象的功能。
因为继承是一种紧耦合，任何父类的改动都会影响到子类，不利于系统维护。
而委托是一种松耦合，只要接口不变，委托类的改动并不会影响其上层对象。

装饰器模式可以有效分离性能组件和功能组件，从而提高模块的可模块性并增加模块的
可复用性。

应用实例： 
1. 孙悟空有 72 变，当他变成"庙宇"后，他的根本还是一只猴子，但是他又有了庙宇的功能。 
2. 不论一幅画有没有画框都可以挂在墙上，但是通常都是有画框的，并且实际上是画框被挂在墙上。
在挂在墙上之前，画可以被蒙上玻璃，装到框子里；这时画、玻璃和画框形成了一个物体。

总而言之，继承从大的方面讲，还是一种类。但是装饰就会让它变成另一种类，原来的类只是新类的一
个组件。

