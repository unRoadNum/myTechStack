下面是使用优先队列自定义的线程池。
使用优先队列的好处是系统繁忙时，可以忽略任务的提交先后顺序，总是让优先级高的任务先执行。
使用优先队列时，任务线程必须实现Comparable接口，优先队列则会根据该接口对任务进行排序。
代码如下：
```
public class MyThread implements Runnable, Comparable<MyThread> {
	protected String name;
	
	public MyThread() {
	}
	public MyThread(String name) {
		this.name = name;
	}
	@Override
	public void run() {
		try {
			Thread.sleep(100);		//模拟工作任务
			System.out.println(name + " ");
		}catch(InterruptedExecption e) {
			e.printStackTrace();
		}
	}
	@Override
	public int compareTo(MyThread o) {	//比较任务的优先级
		int me = Integer.parseInt(this.name.split("_")[1]);
		int other = Integer.parseInt(o.name.split("_")[1]);  //线程名称中包含任务优先级
		if(me > other)	return 1;
		else if(me < other)	return -1;
		else ruturn 0;
	}
}

//任务调度代码如下:
ExecutorService exe = new ThreadPoolExecutor(100, 200, 0L, TimeUnit.SECONDS, new PriorityBlockingQueue<Runnable>());
for(int i=0; i < 1000; i++) {
	exe.execute(new MyThread("testThreadPoolExecutor3_" + Integer.toString(999-i)));
}
```

