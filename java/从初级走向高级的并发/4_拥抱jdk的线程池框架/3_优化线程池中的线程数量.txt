线程池的大小对系统的性能有一定的影响。
过大或者过小的线程数量都无法发挥最优的系统性能，但是线程池大小的确定也不需要做的非常精确。
因为只要避免极大或极小两种情况，线程池的大小对系统的性能并不会影响太大。

一般来说，确定线程池的大小需要考虑CPU数量、内存大小、JDBC连接等因素。
在<<java并发编程实践>>给出了估算线程池大小的公式：
Ncpu = cpu数量
Ucpu = 目标cpu使用率， 0 <= Ucpu <= 1
W/C = 等待时间与计算时间的比率

为保证处理器达到期望的使用率，最优的线程池大小等于：
Nthreads = Ncpu * Ucpu * (1 + W/C);

在java中可以通过:
Runtime.getRuntime().availableProcessors();
取得可用的cpu数量。
