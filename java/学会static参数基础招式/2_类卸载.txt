#类卸载#

在类的Class对象不再被引用，Class对象就会结束生命周期。
类在方法区内的数据也会被卸载，从而结束生命。

因为类的在加载的时候，首先就会将类信息加载到方法区，
然后在堆中实例化一个java.lang.Class对象，作为方法区这个类的信息入口。

那什么时候类的Class对象就会不再引用了呢？

在类初始被加载的时候，它的类加载器都会用一个java集合来存放所加载类的引用。
所以说，类加载器引用了类的Class对象。
反之，一个Class对象都会有一个getClassLoader()的方法，可以获得它的类加载器。
所以说类加载器和Class对象是相互引用。

当一个类被实例化以后，它的实例总是会引用它的Class对象。
因为在Object类中定义了getClass方法，这个方法返回代表对象所属类的Class对象的引用。
而且，#所有的java类都有一个静态属性class#，它引用代表这个类的Class对象。

这就说明：
#由jvm虚拟机自带的类加载器所加载的类，在jvm的生命周期中，始终不会被卸载#。
因为jvm本身会始终引用这些类加载器，而这些类加载器则会#始终引用#它们所加载的类
的Class对象。

#但是由用户自定义的类加载器加载的类是可以被卸载的#



