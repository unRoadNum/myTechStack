## 概要
Runnable接口、Thread类都是java实现多线程的两种不同方式。

## 两种使用方法
1. 通过实现Runnable接口的run()方法，结合Thread类实现多线程
	* 如果选择implements Runnable接口，必须得结合Thread类，如下:
		```
		public class MyRunnable implements Runnable {
			
			private int ticket = 5;
			
			public void run() {
				for(int i = 0; i < 10; i++) {
					if(this.ticket > 0){
						System.out.println("线程开始：" + Thread.currentThread().getName() + ", 卖票" + this.ticket--);
					}
				}
			}
		}
		
		public class Main {
			
			public static void main(String[] args) {
				
				Runnable r = new MyRunnable();
				
				Thread t1 = new Thread(r, "线程1")；
				Thread t2 = new Thread(r, "线程2");
				
				t1.start();
				t2.start();
			}
		}
		```
	因为Runnable接口并没有start()方法， 而Thread类的构造方法public Thread(Runnable target)，此构造方法的参数正好是Runnable子类
		** 直接调用run()方法只是调用了同一个方法而已，并没有新建线程，
		所以必须调用start()方法
2. 直接通过extends Thread类实现多线程，如下:
	```
	public class MyThread extends Thread {
		
		private String name;
		private int ticket = 5;
		
		public MyTread(String name) {
			for(int i = 0; i < 10; i++) {
				if(this.ticket > 0) {
					System.out.println("线程开始: " + this.name + ", 卖票: i=" + this.ticket--);
				}
			}
		}
	}
	
	public class Main {
		
		public static void main(String[] args) {
			
			Thread t1 = new MyThread("线程1");
			Thread t2 = new MyThread("线程2");
			
			t1.start();
			t2.start();
		}
	}
	```

## 对比
1. 对比发现，通过implements Runnable接口实现的两个线程共享了ticket(5)的变量，而extends Thread的各自独立使用两个变量ticket
2. 因为java的extends只能继承一个类，而implements可以实现多个接口，所以第一种方法更加灵活，多变。
	
