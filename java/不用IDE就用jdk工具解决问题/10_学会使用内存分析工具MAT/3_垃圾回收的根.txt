垃圾回收的根
在java系统中，有可能是垃圾回收的根对象的有如下：
1. 系统类： 被bootstrap/system ClassLoader加载的类。如在rt.jar包中的所有类。
2. JNI局部变量：

JNI是Java Native Interface的缩写，它提供了若干的API实现了Java和其他语言的通信（主要是C&C++）
JNI一开始是为了本地已编译语言，尤其是C和C++而设计的，但是它并不妨碍你使用其他编程语言，只要调用约定受支持就可以了。
JNI标准至少要保证本地代码能工作在任何Java 虚拟机环境。

所谓本地代码，也就是指的是本地已编译的其他语言的代码。

JNI如何跟本地代码交互的。
1. 你可以利用jni来实现本地方法（"native methods")，并在java程序中调用它们。
2. jni支持一个调用接口（"invocation interface")， 它允许你把jvm嵌入到本地程序中。
本地程序可以链接一个实现了jvm的本地库，然后使用“调用接口"执行java写的软件模块。

一旦使用了jni，java就丧失了跨平台的优点，而且程序不再安全。

3. JNI全局变量
4. 线程：开始，并且没有停止的线程。
5. 正在使用的锁：作为锁的对象。比如，调用了wait或者notify方法的对象，或者调用synchronized(Object)操作的锁对象。
6. java局部变量：如函数的输入参数以及方法中的局部变量。
7. 本地栈： 本地代码中的输入输出参数。比如用户自定义的jni代码或者jvm内部代码。
8. Finalizer: 在等待队列中将要被执行析构函数的对象。
9. Unfinalized: 拥有析构函数，但是没有被析构，且不在析构队列中的对象。
10. 不可达对象： 从任何一个根对象，都无法到达的对象。但为了能够在MAT中分析，被MAT标志为根。
11. 未知对象：未知的根类型，用于处理一些特殊的堆格式。

