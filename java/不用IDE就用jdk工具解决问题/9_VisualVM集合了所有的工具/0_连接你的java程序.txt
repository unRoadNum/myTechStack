Visual VM是一个功能强大的多合一故障诊断和性能监控的可视化工具。
它集成了多种性能统计工具的功能，使用Visual VM可以代替jstat/jmap/jhat/jstack/JConsole。
在JDK6 Update7以后，Visual VM便作为JDK的一部分发布，它完全免费。

安装插件也很容易。
可以通过离线下载插件文件*.nbm，然后在Plugin对话框的download页面下，添加已下载的插件。
也可以在Availble Plugin页面下，在线安装插件。

连接你的java程序。

#本地连接#
Visual VM支持多种方式连接应用程序，最常用的就是本地连接。
只要本地计算机内有java应用程序正在执行，在Visual VM的Local节点下，就会出现这些应用。

然后双击应用程序或者右键打开，就能够监控应用程序的运行。
由于Visual VM本身就java程序，因此自身也在列表中。

#远程JMX连接#
Visual VM也支持远程JMX连接。

远程的java应用程序可以通过如下参数打开JMX端口：
```
-Djava.rmi.server.hostname=127.0.0.1
-Dcom.sun.management.jmxremote
-Dcom.sun.management.jmxremote.port=8888
-Dcom.sum.management.jmxremote.authenticate=false
-Dcom.sun.management.jmxremote.ssl=false
```

在本地File->add JMX Connection：
在弹出的对话框中填写远程计算机地址、端口。

添加成功以后，在Local节点下，就会出现一个JMX图标的应用程序。

#连接远程主机#
我的理解是Visual VM不仅提供了远程JMX连接，也支持远程的jstatd连接。

远程主机可以通过jstatd工具建立，使用命令开启jstatd服务器。

在本地Visual VM添加远程主机，，即add Remote Host。



