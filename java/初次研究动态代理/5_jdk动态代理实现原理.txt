#jdk动态代理实现原理#

虽然知道jdk动态代理跟jvm动态类加载、反射等机制有莫大关系，
但还是不是很明白到底是怎么一个事情。

现在我越来越有一种：Class类和Class对象其实就是为让jvm自己用的，
当一个类加载的时候，会生成一个class对象，这个class对象是方法区类信息的一个索引。
类加载完成以后，假如要初始化一个对象，会在堆区建立对象信息。

当我们需要调用对象的一个方法的时候，#注意是对象的一个方法#;
jvm根据对象可以找到类的Class对象，然后在方法区找到类方法相关信息。
最后，结合对象具体信息和类方法，在方法栈完成方法的调用。

Class类的方法、Constructor类以及Method类的方法都是jvm为调用对象方法的工具。
它本身建立以后，不是给我们使用的，而是给它自己用来管理。
只不过被程序员主动去调用了，私以为这种事不是什么好事，跟地址越界一样，会破坏原有规则。

上面这些东西都是我自己的一些想法，希望将来能有机会去验证。

接着我们就来研究一下jdk动态加载的底层实现原理。

先研究一下，Proxy类的newProxyInstance方法。
这个东西从名字上完全就会让人蒙圈。
如果你不知道，还以为是Proxy类提供了一个生成Proxy对象的方法。
如果想要一个Proxy对象，new Proxy()就行了么，非得这样。
