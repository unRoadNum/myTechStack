新生代并行回收器特点： 多线程、独占式。

与并行收集器一样，使用复制算法。

新生代并行回收器使用如下参数启动：
-XX: +UseParallelGC:  新生代使用并行回收器，老年代使用串行回收器。
-XX: +UseParallelOldGC: 新生代和老年代都使用并行回收器。

还提供了两个重要参数用于控制系统吞吐量。

-XX: MaxGCPauseMillis
设置最大垃圾收集停顿时间，它的值是一个大于0的整数。
收集器在工作时，会调整java堆大小或者其他一些参数，尽可能把停顿时间控制在MaxGCPauseMillis以内。
如果希望减少停顿时间，而把这个值设置的很小，为了达到预期的停顿时间，jvm会使用一个较小的堆。
这样导致垃圾回收变得频繁，从而增加了垃圾回收总时间，降低了吞吐量。

-XX: GCTimeRatio
设置吞吐量大小，它的值是一个0~100的整数。
假设GCTimeRatio的值为n，那么系统将花费不超过1/(1+n)的时间用于垃圾收集。

#并行回收收集器与并行收集器不同点#
新生代并行回收器还支持一种自适应的GC调节策略。
使用-XX:+UseAdaptiveSizePolicy可以打开自适应策略。

在这种模式下，新生代的大小、eden和survivor的比例、晋升老年代的对象年龄等参数会被自动调整，
以达到在堆大小、吞吐量和停顿时间的平衡点。

