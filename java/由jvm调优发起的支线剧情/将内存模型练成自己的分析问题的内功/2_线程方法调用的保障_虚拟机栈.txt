#java虚拟机栈#

#java虚拟机栈也是线程私有的内存空间#。
它和java线程在同一时间创建。
它保存方法的局部变量、部分结果，并参数方法的调用和返回。

那应该是怎么样调用的呢?

在某个线程的运行过程中，
如果有新的方法调用，那么该线程对应的栈就会增加一个存储单元，即帧(frame)。
在frame中，保存有该方法调用的参数、局部变量和返回地址。

Java的参数和局部变量只能是:
基本类型的变量(比如int)，或者对象的引用(reference)。
因此，#在栈中，只保存有基本类型的变量和对象引用#。
引用所指向的对象保存在堆中。(引用可能为Null值，即不指向任何对象)。

方法结束的时候，是怎么个过程呢？

当被调用方法运行结束时，该方法对应的帧将被删除，参数和局部变量所占据的空间也随之释放。
线程回到原方法，继续执行。当所有的栈都清空时，程序也随之运行结束。

#在这其中与调优相关的东西#

虚拟机栈大小可以是动态的或者固定的。

#有两种异常跟虚拟机栈有关：#
StackOverflowError、OutOfMemoryError

1. 如果线程的计算过程中，请求的栈深度大于最大可用的栈深度，则抛出StackOverflowError
2. 如果java栈可以动态扩展，而在扩展栈的过程中，没有足够的内存空间来支持栈的扩展，则抛出OutOfMemoryError

