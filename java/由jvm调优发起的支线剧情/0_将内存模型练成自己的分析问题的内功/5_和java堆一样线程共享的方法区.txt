#方法区#

方法区是什么？
#方法区（Method Area）与Java堆一样，是各个线程共享的内存区域#。

方法区主要保存的信息是类的元数据。

方法区中最为重要的是类的类型信息、常量池、域信息、方法信息。
类型信息包括类的完整名称、父类的完整名称、类型修饰符(public/protected/private)和类型的直接接口类表。
常量池包括这个类方法、域等信息所引用的常量信息。
域信息包括域名称、域类型和域修饰符。
方法信息包括方法名称、返回类型、方法参数、方法修饰符、方法字节码、
操作数栈和方法帧栈的局部变量区大小以及异常表。

总之，方法区内保持的信息，大部分来自于class文件。

方法区中包含的都是在整个程序中永远唯一的元素，如class、static变量。

方法区信息也会被回收吗？
当然，虽然方法区也叫作永久区，一个独立于java堆的内存空间，但会被GC回收。
对永久区GC的回收，主要通过两方面：
1. GC对常量池的回收。
2. GC对类元数据的回收。

#GC对常量池的回收#
```
@Test
public void permGenGc(){
	for(int i=0; i < Integer.MAX_VALUE; i++){
		String t = String.valueOf(i).intern();  //加入常量池
	}
}
```
String.intern()方法的含义是：
如果常量池中已经存在当前的String，则返回池中对象。
如果常量池中不存在当前String对象，则先将String加入常量池，并返回池中的对象引用。

以上代码很快导致方法区饱和。
如果GC不能回收永久区的这些常量数据，那么就会抛出OutOfMemoryError错误。




